[tool.poetry]
name = "pandora-test-task"
version = "0.1.0"
description = ""
authors = ["Rusih100 <rusih100@gmail.com>"]
readme = "README.md"
packages = [{include = "pandora_test_task"}]

[tool.poetry.dependencies]
python = "^3.11"
jinja2 = "^3.1.2"
flask = {extras = ["async"], version = "^3.0.0"}
aiohttp = "^3.8.6"
flask-wtf = "^1.2.1"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.292"
black = "^23.9.1"
isort = "^5.12.0"

[tool.black]
target-version = ['py311']
line-length = 80


[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3
combine_as_imports = true

[tool.ruff]
target-version = "py311"
line-length = 80
ignore-init-module-imports = true
extend-exclude = ["alembic"]  # The alembic directory is not excluded in .gitignore
src = [
    "app",
    "pandora"
]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "UP",     # pyupgrade
    "C",      # flake8-comprehensions
    "B",      # flake8-bugbear
    "ISC",    # flake8-implicit-str-concat
    "ASYNC",  # flake8-async
    "ANN",    # flake8-annotations
    "TCH",    # flake8-type-checking
    "PT",     # flake8-pytest-style
    "RUF",    # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "F821",   # checks for uses of undefined names, breaks sqlalchemy models
    "UP007",  # large models are unreadable
    "ANN101", # removes type checking for self
    "ANN102", # removes type checking for cls
    "ANN401", # allows type Any
    "RUF012"  # typing.ClassVar
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
